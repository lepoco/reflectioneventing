### YamlMime:ManagedReference
items:
- uid: ReflectionEventing.IConsumer`1
  commentId: T:ReflectionEventing.IConsumer`1
  id: IConsumer`1
  parent: ReflectionEventing
  children:
  - ReflectionEventing.IConsumer`1.ConsumeAsync(`0,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IConsumer<TEvent>
  nameWithType: IConsumer<TEvent>
  fullName: ReflectionEventing.IConsumer<TEvent>
  type: Interface
  source:
    remote:
      path: src/ReflectionEventing/IConsumer.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: IConsumer
    path: ../src/ReflectionEventing/IConsumer.cs
    startLine: 14
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Defines a contract for a consumer that can handle a specific event type.
  remarks: Implementations of this interface are expected to provide a mechanism to consume a specific event type asynchronously.
  example: []
  syntax:
    content: public interface IConsumer<in TEvent>
    typeParameters:
    - id: TEvent
      description: The type of the event that the consumer can handle.
    content.vb: Public Interface IConsumer(Of In TEvent)
  nameWithType.vb: IConsumer(Of TEvent)
  fullName.vb: ReflectionEventing.IConsumer(Of TEvent)
  name.vb: IConsumer(Of TEvent)
- uid: ReflectionEventing.IConsumer`1.ConsumeAsync(`0,System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.IConsumer`1.ConsumeAsync(`0,System.Threading.CancellationToken)
  id: ConsumeAsync(`0,System.Threading.CancellationToken)
  parent: ReflectionEventing.IConsumer`1
  langs:
  - csharp
  - vb
  name: ConsumeAsync(TEvent, CancellationToken)
  nameWithType: IConsumer<TEvent>.ConsumeAsync(TEvent, CancellationToken)
  fullName: ReflectionEventing.IConsumer<TEvent>.ConsumeAsync(TEvent, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing/IConsumer.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: ConsumeAsync
    path: ../src/ReflectionEventing/IConsumer.cs
    startLine: 22
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Consumes the specified event asynchronously.
  example: []
  syntax:
    content: Task ConsumeAsync(TEvent payload, CancellationToken cancellationToken)
    parameters:
    - id: payload
      type: '{TEvent}'
      description: The event to consume.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Function ConsumeAsync(payload As TEvent, cancellationToken As CancellationToken) As Task
  overload: ReflectionEventing.IConsumer`1.ConsumeAsync*
  nameWithType.vb: IConsumer(Of TEvent).ConsumeAsync(TEvent, CancellationToken)
  fullName.vb: ReflectionEventing.IConsumer(Of TEvent).ConsumeAsync(TEvent, System.Threading.CancellationToken)
references:
- uid: ReflectionEventing
  commentId: N:ReflectionEventing
  href: ReflectionEventing.html
  name: ReflectionEventing
  nameWithType: ReflectionEventing
  fullName: ReflectionEventing
- uid: ReflectionEventing.IConsumer`1.ConsumeAsync*
  commentId: Overload:ReflectionEventing.IConsumer`1.ConsumeAsync
  href: ReflectionEventing.IConsumer-1.html#ReflectionEventing_IConsumer_1_ConsumeAsync__0_System_Threading_CancellationToken_
  name: ConsumeAsync
  nameWithType: IConsumer<TEvent>.ConsumeAsync
  fullName: ReflectionEventing.IConsumer<TEvent>.ConsumeAsync
  nameWithType.vb: IConsumer(Of TEvent).ConsumeAsync
  fullName.vb: ReflectionEventing.IConsumer(Of TEvent).ConsumeAsync
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
