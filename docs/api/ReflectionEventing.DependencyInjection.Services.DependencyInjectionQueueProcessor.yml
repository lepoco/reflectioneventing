### YamlMime:ManagedReference
items:
- uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor
  commentId: T:ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor
  id: DependencyInjectionQueueProcessor
  parent: ReflectionEventing.DependencyInjection.Services
  children:
  - ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.#ctor(ReflectionEventing.Queues.IEventsQueue,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider,Microsoft.Extensions.Logging.ILogger{ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor})
  - ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.BackgroundProcessing(System.Threading.CancellationToken)
  - ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ExecuteAsync(System.Threading.CancellationToken)
  - ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ProcessQueueAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DependencyInjectionQueueProcessor
  nameWithType: DependencyInjectionQueueProcessor
  fullName: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor
  type: Class
  source:
    remote:
      path: src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: DependencyInjectionQueueProcessor
    path: ../src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
    startLine: 10
  assemblies:
  - ReflectionEventing.DependencyInjection
  namespace: ReflectionEventing.DependencyInjection.Services
  syntax:
    content: 'public class DependencyInjectionQueueProcessor : BackgroundService, IHostedService, IDisposable'
    content.vb: Public Class DependencyInjectionQueueProcessor Inherits BackgroundService Implements IHostedService, IDisposable
  inheritance:
  - System.Object
  - Microsoft.Extensions.Hosting.BackgroundService
  implements:
  - Microsoft.Extensions.Hosting.IHostedService
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  - Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  - Microsoft.Extensions.Hosting.BackgroundService.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.#ctor(ReflectionEventing.Queues.IEventsQueue,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider,Microsoft.Extensions.Logging.ILogger{ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor})
  commentId: M:ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.#ctor(ReflectionEventing.Queues.IEventsQueue,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider,Microsoft.Extensions.Logging.ILogger{ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor})
  id: '#ctor(ReflectionEventing.Queues.IEventsQueue,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider,Microsoft.Extensions.Logging.ILogger{ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor})'
  parent: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor
  langs:
  - csharp
  - vb
  name: DependencyInjectionQueueProcessor(IEventsQueue, IServiceScopeFactory, QueueProcessorOptionsProvider, ILogger<DependencyInjectionQueueProcessor>)
  nameWithType: DependencyInjectionQueueProcessor.DependencyInjectionQueueProcessor(IEventsQueue, IServiceScopeFactory, QueueProcessorOptionsProvider, ILogger<DependencyInjectionQueueProcessor>)
  fullName: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.DependencyInjectionQueueProcessor(ReflectionEventing.Queues.IEventsQueue, Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider, Microsoft.Extensions.Logging.ILogger<ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor>)
  type: Constructor
  source:
    remote:
      path: src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: .ctor
    path: ../src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
    startLine: 10
  assemblies:
  - ReflectionEventing.DependencyInjection
  namespace: ReflectionEventing.DependencyInjection.Services
  syntax:
    content: public DependencyInjectionQueueProcessor(IEventsQueue queue, IServiceScopeFactory scopeFactory, QueueProcessorOptionsProvider options, ILogger<DependencyInjectionQueueProcessor> logger)
    parameters:
    - id: queue
      type: ReflectionEventing.Queues.IEventsQueue
    - id: scopeFactory
      type: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
    - id: options
      type: ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor}
    content.vb: Public Sub New(queue As IEventsQueue, scopeFactory As IServiceScopeFactory, options As QueueProcessorOptionsProvider, logger As ILogger(Of DependencyInjectionQueueProcessor))
  overload: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.#ctor*
  nameWithType.vb: DependencyInjectionQueueProcessor.New(IEventsQueue, IServiceScopeFactory, QueueProcessorOptionsProvider, ILogger(Of DependencyInjectionQueueProcessor))
  fullName.vb: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.New(ReflectionEventing.Queues.IEventsQueue, Microsoft.Extensions.DependencyInjection.IServiceScopeFactory, ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider, Microsoft.Extensions.Logging.ILogger(Of ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor))
  name.vb: New(IEventsQueue, IServiceScopeFactory, QueueProcessorOptionsProvider, ILogger(Of DependencyInjectionQueueProcessor))
- uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ExecuteAsync(System.Threading.CancellationToken)
  id: ExecuteAsync(System.Threading.CancellationToken)
  parent: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CancellationToken)
  nameWithType: DependencyInjectionQueueProcessor.ExecuteAsync(CancellationToken)
  fullName: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: ExecuteAsync
    path: ../src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
    startLine: 33
  assemblies:
  - ReflectionEventing.DependencyInjection
  namespace: ReflectionEventing.DependencyInjection.Services
  summary: >-
    This method is called when the <xref href="Microsoft.Extensions.Hosting.IHostedService" data-throw-if-not-resolved="false"></xref> starts. The implementation should return a task that represents

    the lifetime of the long running operation(s) being performed.
  example: []
  syntax:
    content: protected override Task ExecuteAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the long running operations.
    content.vb: Protected Overrides Function ExecuteAsync(cancellationToken As CancellationToken) As Task
  overridden: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  overload: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ExecuteAsync*
- uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.BackgroundProcessing(System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.BackgroundProcessing(System.Threading.CancellationToken)
  id: BackgroundProcessing(System.Threading.CancellationToken)
  parent: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor
  langs:
  - csharp
  - vb
  name: BackgroundProcessing(CancellationToken)
  nameWithType: DependencyInjectionQueueProcessor.BackgroundProcessing(CancellationToken)
  fullName: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.BackgroundProcessing(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: BackgroundProcessing
    path: ../src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
    startLine: 38
  assemblies:
  - ReflectionEventing.DependencyInjection
  namespace: ReflectionEventing.DependencyInjection.Services
  syntax:
    content: protected virtual Task BackgroundProcessing(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overridable Function BackgroundProcessing(cancellationToken As CancellationToken) As Task
  overload: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.BackgroundProcessing*
- uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ProcessQueueAsync(System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ProcessQueueAsync(System.Threading.CancellationToken)
  id: ProcessQueueAsync(System.Threading.CancellationToken)
  parent: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor
  langs:
  - csharp
  - vb
  name: ProcessQueueAsync(CancellationToken)
  nameWithType: DependencyInjectionQueueProcessor.ProcessQueueAsync(CancellationToken)
  fullName: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ProcessQueueAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: ProcessQueueAsync
    path: ../src/ReflectionEventing.DependencyInjection/Services/DependencyInjectionQueueProcessor.cs
    startLine: 57
  assemblies:
  - ReflectionEventing.DependencyInjection
  namespace: ReflectionEventing.DependencyInjection.Services
  syntax:
    content: protected virtual Task ProcessQueueAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overridable Function ProcessQueueAsync(cancellationToken As CancellationToken) As Task
  overload: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ProcessQueueAsync*
references:
- uid: ReflectionEventing.DependencyInjection.Services
  commentId: N:ReflectionEventing.DependencyInjection.Services
  href: ReflectionEventing.html
  name: ReflectionEventing.DependencyInjection.Services
  nameWithType: ReflectionEventing.DependencyInjection.Services
  fullName: ReflectionEventing.DependencyInjection.Services
  spec.csharp:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.DependencyInjection
    name: DependencyInjection
    href: ReflectionEventing.DependencyInjection.html
  - name: .
  - uid: ReflectionEventing.DependencyInjection.Services
    name: Services
    href: ReflectionEventing.DependencyInjection.Services.html
  spec.vb:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.DependencyInjection
    name: DependencyInjection
    href: ReflectionEventing.DependencyInjection.html
  - name: .
  - uid: ReflectionEventing.DependencyInjection.Services
    name: Services
    href: ReflectionEventing.DependencyInjection.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.Extensions.Hosting.BackgroundService
  commentId: T:Microsoft.Extensions.Hosting.BackgroundService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice
  name: BackgroundService
  nameWithType: BackgroundService
  fullName: Microsoft.Extensions.Hosting.BackgroundService
- uid: Microsoft.Extensions.Hosting.IHostedService
  commentId: T:Microsoft.Extensions.Hosting.IHostedService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice
  name: IHostedService
  nameWithType: IHostedService
  fullName: Microsoft.Extensions.Hosting.IHostedService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  name: StartAsync(CancellationToken)
  nameWithType: BackgroundService.StartAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  name: StopAsync(CancellationToken)
  nameWithType: BackgroundService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.Dispose
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  name: Dispose()
  nameWithType: BackgroundService.Dispose()
  fullName: Microsoft.Extensions.Hosting.BackgroundService.Dispose()
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
- uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.#ctor*
  commentId: Overload:ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.#ctor
  href: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.html#ReflectionEventing_DependencyInjection_Services_DependencyInjectionQueueProcessor__ctor_ReflectionEventing_Queues_IEventsQueue_Microsoft_Extensions_DependencyInjection_IServiceScopeFactory_ReflectionEventing_DependencyInjection_Configuration_QueueProcessorOptionsProvider_Microsoft_Extensions_Logging_ILogger_ReflectionEventing_DependencyInjection_Services_DependencyInjectionQueueProcessor__
  name: DependencyInjectionQueueProcessor
  nameWithType: DependencyInjectionQueueProcessor.DependencyInjectionQueueProcessor
  fullName: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.DependencyInjectionQueueProcessor
  nameWithType.vb: DependencyInjectionQueueProcessor.New
  fullName.vb: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.New
  name.vb: New
- uid: ReflectionEventing.Queues.IEventsQueue
  commentId: T:ReflectionEventing.Queues.IEventsQueue
  parent: ReflectionEventing.Queues
  href: ReflectionEventing.Queues.IEventsQueue.html
  name: IEventsQueue
  nameWithType: IEventsQueue
  fullName: ReflectionEventing.Queues.IEventsQueue
- uid: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.iservicescopefactory
  name: IServiceScopeFactory
  nameWithType: IServiceScopeFactory
  fullName: Microsoft.Extensions.DependencyInjection.IServiceScopeFactory
- uid: ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider
  commentId: T:ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider
  parent: ReflectionEventing.DependencyInjection.Configuration
  href: ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider.html
  name: QueueProcessorOptionsProvider
  nameWithType: QueueProcessorOptionsProvider
  fullName: ReflectionEventing.DependencyInjection.Configuration.QueueProcessorOptionsProvider
- uid: Microsoft.Extensions.Logging.ILogger{ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor}
  commentId: T:Microsoft.Extensions.Logging.ILogger{ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<DependencyInjectionQueueProcessor>
  nameWithType: ILogger<DependencyInjectionQueueProcessor>
  fullName: Microsoft.Extensions.Logging.ILogger<ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor>
  nameWithType.vb: ILogger(Of DependencyInjectionQueueProcessor)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor)
  name.vb: ILogger(Of DependencyInjectionQueueProcessor)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor
    name: DependencyInjectionQueueProcessor
    href: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor
    name: DependencyInjectionQueueProcessor
    href: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.html
  - name: )
- uid: ReflectionEventing.Queues
  commentId: N:ReflectionEventing.Queues
  href: ReflectionEventing.html
  name: ReflectionEventing.Queues
  nameWithType: ReflectionEventing.Queues
  fullName: ReflectionEventing.Queues
  spec.csharp:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.Queues
    name: Queues
    href: ReflectionEventing.Queues.html
  spec.vb:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.Queues
    name: Queues
    href: ReflectionEventing.Queues.html
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.DependencyInjection
    name: DependencyInjection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection
- uid: ReflectionEventing.DependencyInjection.Configuration
  commentId: N:ReflectionEventing.DependencyInjection.Configuration
  href: ReflectionEventing.html
  name: ReflectionEventing.DependencyInjection.Configuration
  nameWithType: ReflectionEventing.DependencyInjection.Configuration
  fullName: ReflectionEventing.DependencyInjection.Configuration
  spec.csharp:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.DependencyInjection
    name: DependencyInjection
    href: ReflectionEventing.DependencyInjection.html
  - name: .
  - uid: ReflectionEventing.DependencyInjection.Configuration
    name: Configuration
    href: ReflectionEventing.DependencyInjection.Configuration.html
  spec.vb:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.DependencyInjection
    name: DependencyInjection
    href: ReflectionEventing.DependencyInjection.html
  - name: .
  - uid: ReflectionEventing.DependencyInjection.Configuration
    name: Configuration
    href: ReflectionEventing.DependencyInjection.Configuration.html
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  name: StopAsync(CancellationToken)
  nameWithType: IHostedService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  name: ExecuteAsync(CancellationToken)
  nameWithType: BackgroundService.ExecuteAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ExecuteAsync*
  commentId: Overload:ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ExecuteAsync
  href: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.html#ReflectionEventing_DependencyInjection_Services_DependencyInjectionQueueProcessor_ExecuteAsync_System_Threading_CancellationToken_
  name: ExecuteAsync
  nameWithType: DependencyInjectionQueueProcessor.ExecuteAsync
  fullName: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ExecuteAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.BackgroundProcessing*
  commentId: Overload:ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.BackgroundProcessing
  href: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.html#ReflectionEventing_DependencyInjection_Services_DependencyInjectionQueueProcessor_BackgroundProcessing_System_Threading_CancellationToken_
  name: BackgroundProcessing
  nameWithType: DependencyInjectionQueueProcessor.BackgroundProcessing
  fullName: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.BackgroundProcessing
- uid: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ProcessQueueAsync*
  commentId: Overload:ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ProcessQueueAsync
  href: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.html#ReflectionEventing_DependencyInjection_Services_DependencyInjectionQueueProcessor_ProcessQueueAsync_System_Threading_CancellationToken_
  name: ProcessQueueAsync
  nameWithType: DependencyInjectionQueueProcessor.ProcessQueueAsync
  fullName: ReflectionEventing.DependencyInjection.Services.DependencyInjectionQueueProcessor.ProcessQueueAsync
