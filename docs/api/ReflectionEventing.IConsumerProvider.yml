### YamlMime:ManagedReference
items:
- uid: ReflectionEventing.IConsumerProvider
  commentId: T:ReflectionEventing.IConsumerProvider
  id: IConsumerProvider
  parent: ReflectionEventing
  children:
  - ReflectionEventing.IConsumerProvider.GetConsumers(System.Type)
  langs:
  - csharp
  - vb
  name: IConsumerProvider
  nameWithType: IConsumerProvider
  fullName: ReflectionEventing.IConsumerProvider
  type: Interface
  source:
    remote:
      path: src/ReflectionEventing/IConsumerProvider.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: IConsumerProvider
    path: ../src/ReflectionEventing/IConsumerProvider.cs
    startLine: 14
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Defines a provider for retrieving types of event consumers.
  remarks: >-
    An implementation of this interface should be able to provide all types that are consumers of a specific event type.

    The consumers are not necessarily instances, but rather the types that can be used to create instances of consumers.
  example: []
  syntax:
    content: public interface IConsumerProvider
    content.vb: Public Interface IConsumerProvider
- uid: ReflectionEventing.IConsumerProvider.GetConsumers(System.Type)
  commentId: M:ReflectionEventing.IConsumerProvider.GetConsumers(System.Type)
  id: GetConsumers(System.Type)
  parent: ReflectionEventing.IConsumerProvider
  langs:
  - csharp
  - vb
  name: GetConsumers(Type)
  nameWithType: IConsumerProvider.GetConsumers(Type)
  fullName: ReflectionEventing.IConsumerProvider.GetConsumers(System.Type)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing/IConsumerProvider.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: GetConsumers
    path: ../src/ReflectionEventing/IConsumerProvider.cs
    startLine: 27
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Gets the consumers objects for the specified event type.
  example:
  - >-
    <pre><code class="lang-csharp">Type consumerType = typeof(MyEvent);

    IEnumerable&lt;object&gt; consumerTypes = consumerProvider.GetConsumers(consumerType);</code></pre>
  syntax:
    content: IEnumerable<object?> GetConsumers(Type consumerType)
    parameters:
    - id: consumerType
      type: System.Type
      description: The type of the event that the consumers handle.
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: An enumerable of <xref href="System.Object" data-throw-if-not-resolved="false"></xref>'s that are consumers of the specified event type.
    content.vb: Function GetConsumers(consumerType As Type) As IEnumerable(Of Object)
  overload: ReflectionEventing.IConsumerProvider.GetConsumers*
references:
- uid: ReflectionEventing
  commentId: N:ReflectionEventing
  href: ReflectionEventing.html
  name: ReflectionEventing
  nameWithType: ReflectionEventing
  fullName: ReflectionEventing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ReflectionEventing.IConsumerProvider.GetConsumers*
  commentId: Overload:ReflectionEventing.IConsumerProvider.GetConsumers
  href: ReflectionEventing.IConsumerProvider.html#ReflectionEventing_IConsumerProvider_GetConsumers_System_Type_
  name: GetConsumers
  nameWithType: IConsumerProvider.GetConsumers
  fullName: ReflectionEventing.IConsumerProvider.GetConsumers
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
