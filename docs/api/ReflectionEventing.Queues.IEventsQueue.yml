### YamlMime:ManagedReference
items:
- uid: ReflectionEventing.Queues.IEventsQueue
  commentId: T:ReflectionEventing.Queues.IEventsQueue
  id: IEventsQueue
  parent: ReflectionEventing.Queues
  children:
  - ReflectionEventing.Queues.IEventsQueue.EnqueueAsync``1(``0,System.Threading.CancellationToken)
  - ReflectionEventing.Queues.IEventsQueue.EnqueueError(ReflectionEventing.Queues.FailedEvent)
  - ReflectionEventing.Queues.IEventsQueue.GetErrors
  - ReflectionEventing.Queues.IEventsQueue.ReadEventsAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IEventsQueue
  nameWithType: IEventsQueue
  fullName: ReflectionEventing.Queues.IEventsQueue
  type: Interface
  source:
    remote:
      path: src/ReflectionEventing/Queues/IEventsQueue.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: IEventsQueue
    path: ../src/ReflectionEventing/Queues/IEventsQueue.cs
    startLine: 10
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing.Queues
  summary: Defines a contract for an event queue that supports asynchronous operations for appending and retrieving events.
  example: []
  syntax:
    content: public interface IEventsQueue
    content.vb: Public Interface IEventsQueue
- uid: ReflectionEventing.Queues.IEventsQueue.EnqueueAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.Queues.IEventsQueue.EnqueueAsync``1(``0,System.Threading.CancellationToken)
  id: EnqueueAsync``1(``0,System.Threading.CancellationToken)
  parent: ReflectionEventing.Queues.IEventsQueue
  langs:
  - csharp
  - vb
  name: EnqueueAsync<TEvent>(TEvent, CancellationToken)
  nameWithType: IEventsQueue.EnqueueAsync<TEvent>(TEvent, CancellationToken)
  fullName: ReflectionEventing.Queues.IEventsQueue.EnqueueAsync<TEvent>(TEvent, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing/Queues/IEventsQueue.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: EnqueueAsync
    path: ../src/ReflectionEventing/Queues/IEventsQueue.cs
    startLine: 18
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing.Queues
  summary: Appends an event to the queue asynchronously.
  example: []
  syntax:
    content: 'Task EnqueueAsync<TEvent>(TEvent @event, CancellationToken cancellationToken = default) where TEvent : class'
    parameters:
    - id: event
      type: '{TEvent}'
      description: The event to append to the queue.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to monitor for cancellation requests.
    typeParameters:
    - id: TEvent
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous append operation.
    content.vb: Function EnqueueAsync(Of TEvent As Class)([event] As TEvent, cancellationToken As CancellationToken = Nothing) As Task
  overload: ReflectionEventing.Queues.IEventsQueue.EnqueueAsync*
  nameWithType.vb: IEventsQueue.EnqueueAsync(Of TEvent)(TEvent, CancellationToken)
  fullName.vb: ReflectionEventing.Queues.IEventsQueue.EnqueueAsync(Of TEvent)(TEvent, System.Threading.CancellationToken)
  name.vb: EnqueueAsync(Of TEvent)(TEvent, CancellationToken)
- uid: ReflectionEventing.Queues.IEventsQueue.EnqueueError(ReflectionEventing.Queues.FailedEvent)
  commentId: M:ReflectionEventing.Queues.IEventsQueue.EnqueueError(ReflectionEventing.Queues.FailedEvent)
  id: EnqueueError(ReflectionEventing.Queues.FailedEvent)
  parent: ReflectionEventing.Queues.IEventsQueue
  langs:
  - csharp
  - vb
  name: EnqueueError(FailedEvent)
  nameWithType: IEventsQueue.EnqueueError(FailedEvent)
  fullName: ReflectionEventing.Queues.IEventsQueue.EnqueueError(ReflectionEventing.Queues.FailedEvent)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing/Queues/IEventsQueue.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: EnqueueError
    path: ../src/ReflectionEventing/Queues/IEventsQueue.cs
    startLine: 25
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing.Queues
  summary: Appends a failed event to the error queue.
  example: []
  syntax:
    content: void EnqueueError(FailedEvent fail)
    parameters:
    - id: fail
      type: ReflectionEventing.Queues.FailedEvent
      description: The failed event to append to the error queue.
    content.vb: Sub EnqueueError(fail As FailedEvent)
  overload: ReflectionEventing.Queues.IEventsQueue.EnqueueError*
- uid: ReflectionEventing.Queues.IEventsQueue.ReadEventsAsync(System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.Queues.IEventsQueue.ReadEventsAsync(System.Threading.CancellationToken)
  id: ReadEventsAsync(System.Threading.CancellationToken)
  parent: ReflectionEventing.Queues.IEventsQueue
  langs:
  - csharp
  - vb
  name: ReadEventsAsync(CancellationToken)
  nameWithType: IEventsQueue.ReadEventsAsync(CancellationToken)
  fullName: ReflectionEventing.Queues.IEventsQueue.ReadEventsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing/Queues/IEventsQueue.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: ReadEventsAsync
    path: ../src/ReflectionEventing/Queues/IEventsQueue.cs
    startLine: 32
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing.Queues
  summary: Reads the events from the queue asynchronously.
  example: []
  syntax:
    content: IAsyncEnumerable<object> ReadEventsAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to monitor for cancellation requests.
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.Object}
      description: An <xref href="System.Collections.Generic.IAsyncEnumerable%601" data-throw-if-not-resolved="false"></xref> of events from the queue.
    content.vb: Function ReadEventsAsync(cancellationToken As CancellationToken) As IAsyncEnumerable(Of Object)
  overload: ReflectionEventing.Queues.IEventsQueue.ReadEventsAsync*
- uid: ReflectionEventing.Queues.IEventsQueue.GetErrors
  commentId: M:ReflectionEventing.Queues.IEventsQueue.GetErrors
  id: GetErrors
  parent: ReflectionEventing.Queues.IEventsQueue
  langs:
  - csharp
  - vb
  name: GetErrors()
  nameWithType: IEventsQueue.GetErrors()
  fullName: ReflectionEventing.Queues.IEventsQueue.GetErrors()
  type: Method
  source:
    remote:
      path: src/ReflectionEventing/Queues/IEventsQueue.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: GetErrors
    path: ../src/ReflectionEventing/Queues/IEventsQueue.cs
    startLine: 38
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing.Queues
  summary: Gets the events that failed processing from the error queue.
  example: []
  syntax:
    content: IEnumerable<FailedEvent> GetErrors()
    return:
      type: System.Collections.Generic.IEnumerable{ReflectionEventing.Queues.FailedEvent}
      description: An <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> of events that failed processing.
    content.vb: Function GetErrors() As IEnumerable(Of FailedEvent)
  overload: ReflectionEventing.Queues.IEventsQueue.GetErrors*
references:
- uid: ReflectionEventing.Queues
  commentId: N:ReflectionEventing.Queues
  href: ReflectionEventing.html
  name: ReflectionEventing.Queues
  nameWithType: ReflectionEventing.Queues
  fullName: ReflectionEventing.Queues
  spec.csharp:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.Queues
    name: Queues
    href: ReflectionEventing.Queues.html
  spec.vb:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.Queues
    name: Queues
    href: ReflectionEventing.Queues.html
- uid: ReflectionEventing.Queues.IEventsQueue.EnqueueAsync*
  commentId: Overload:ReflectionEventing.Queues.IEventsQueue.EnqueueAsync
  href: ReflectionEventing.Queues.IEventsQueue.html#ReflectionEventing_Queues_IEventsQueue_EnqueueAsync__1___0_System_Threading_CancellationToken_
  name: EnqueueAsync
  nameWithType: IEventsQueue.EnqueueAsync
  fullName: ReflectionEventing.Queues.IEventsQueue.EnqueueAsync
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ReflectionEventing.Queues.IEventsQueue.EnqueueError*
  commentId: Overload:ReflectionEventing.Queues.IEventsQueue.EnqueueError
  href: ReflectionEventing.Queues.IEventsQueue.html#ReflectionEventing_Queues_IEventsQueue_EnqueueError_ReflectionEventing_Queues_FailedEvent_
  name: EnqueueError
  nameWithType: IEventsQueue.EnqueueError
  fullName: ReflectionEventing.Queues.IEventsQueue.EnqueueError
- uid: ReflectionEventing.Queues.FailedEvent
  commentId: T:ReflectionEventing.Queues.FailedEvent
  parent: ReflectionEventing.Queues
  href: ReflectionEventing.Queues.FailedEvent.html
  name: FailedEvent
  nameWithType: FailedEvent
  fullName: ReflectionEventing.Queues.FailedEvent
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ReflectionEventing.Queues.IEventsQueue.ReadEventsAsync*
  commentId: Overload:ReflectionEventing.Queues.IEventsQueue.ReadEventsAsync
  href: ReflectionEventing.Queues.IEventsQueue.html#ReflectionEventing_Queues_IEventsQueue_ReadEventsAsync_System_Threading_CancellationToken_
  name: ReadEventsAsync
  nameWithType: IEventsQueue.ReadEventsAsync
  fullName: ReflectionEventing.Queues.IEventsQueue.ReadEventsAsync
- uid: System.Collections.Generic.IAsyncEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<object>
  nameWithType: IAsyncEnumerable<object>
  fullName: System.Collections.Generic.IAsyncEnumerable<object>
  nameWithType.vb: IAsyncEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Object)
  name.vb: IAsyncEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ReflectionEventing.Queues.IEventsQueue.GetErrors*
  commentId: Overload:ReflectionEventing.Queues.IEventsQueue.GetErrors
  href: ReflectionEventing.Queues.IEventsQueue.html#ReflectionEventing_Queues_IEventsQueue_GetErrors
  name: GetErrors
  nameWithType: IEventsQueue.GetErrors
  fullName: ReflectionEventing.Queues.IEventsQueue.GetErrors
- uid: System.Collections.Generic.IEnumerable{ReflectionEventing.Queues.FailedEvent}
  commentId: T:System.Collections.Generic.IEnumerable{ReflectionEventing.Queues.FailedEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FailedEvent>
  nameWithType: IEnumerable<FailedEvent>
  fullName: System.Collections.Generic.IEnumerable<ReflectionEventing.Queues.FailedEvent>
  nameWithType.vb: IEnumerable(Of FailedEvent)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ReflectionEventing.Queues.FailedEvent)
  name.vb: IEnumerable(Of FailedEvent)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ReflectionEventing.Queues.FailedEvent
    name: FailedEvent
    href: ReflectionEventing.Queues.FailedEvent.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ReflectionEventing.Queues.FailedEvent
    name: FailedEvent
    href: ReflectionEventing.Queues.FailedEvent.html
  - name: )
