### YamlMime:ManagedReference
items:
- uid: ReflectionEventing.EventBus
  commentId: T:ReflectionEventing.EventBus
  id: EventBus
  parent: ReflectionEventing
  children:
  - ReflectionEventing.EventBus.#ctor(ReflectionEventing.IConsumerProvider,ReflectionEventing.IConsumerTypesProvider,ReflectionEventing.Queues.IEventsQueue)
  - ReflectionEventing.EventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
  - ReflectionEventing.EventBus.SendAsync``1(``0,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: EventBus
  nameWithType: EventBus
  fullName: ReflectionEventing.EventBus
  type: Class
  source:
    remote:
      path: src/ReflectionEventing/EventBus.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: EventBus
    path: ../src/ReflectionEventing/EventBus.cs
    startLine: 15
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Represents a class that provides event publishing capabilities.
  remarks: This class uses a service provider to get required services and a consumer provider to get consumers for a specific event type.
  example: []
  syntax:
    content: 'public class EventBus : IEventBus'
    content.vb: Public Class EventBus Implements IEventBus
  inheritance:
  - System.Object
  derivedClasses:
  - ReflectionEventing.DependencyInjection.DependencyInjectionEventBus
  implements:
  - ReflectionEventing.IEventBus
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - ReflectionEventing.IEventBus.ReflectionEventing.EventBusExtensions.Publish``1({TEvent})
  - ReflectionEventing.IEventBus.ReflectionEventing.EventBusExtensions.Send``1({TEvent})
- uid: ReflectionEventing.EventBus.#ctor(ReflectionEventing.IConsumerProvider,ReflectionEventing.IConsumerTypesProvider,ReflectionEventing.Queues.IEventsQueue)
  commentId: M:ReflectionEventing.EventBus.#ctor(ReflectionEventing.IConsumerProvider,ReflectionEventing.IConsumerTypesProvider,ReflectionEventing.Queues.IEventsQueue)
  id: '#ctor(ReflectionEventing.IConsumerProvider,ReflectionEventing.IConsumerTypesProvider,ReflectionEventing.Queues.IEventsQueue)'
  parent: ReflectionEventing.EventBus
  langs:
  - csharp
  - vb
  name: EventBus(IConsumerProvider, IConsumerTypesProvider, IEventsQueue)
  nameWithType: EventBus.EventBus(IConsumerProvider, IConsumerTypesProvider, IEventsQueue)
  fullName: ReflectionEventing.EventBus.EventBus(ReflectionEventing.IConsumerProvider, ReflectionEventing.IConsumerTypesProvider, ReflectionEventing.Queues.IEventsQueue)
  type: Constructor
  source:
    remote:
      path: src/ReflectionEventing/EventBus.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: .ctor
    path: ../src/ReflectionEventing/EventBus.cs
    startLine: 15
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Represents a class that provides event publishing capabilities.
  remarks: This class uses a service provider to get required services and a consumer provider to get consumers for a specific event type.
  example: []
  syntax:
    content: public EventBus(IConsumerProvider consumerProviders, IConsumerTypesProvider consumerTypesProvider, IEventsQueue queue)
    parameters:
    - id: consumerProviders
      type: ReflectionEventing.IConsumerProvider
    - id: consumerTypesProvider
      type: ReflectionEventing.IConsumerTypesProvider
    - id: queue
      type: ReflectionEventing.Queues.IEventsQueue
    content.vb: Public Sub New(consumerProviders As IConsumerProvider, consumerTypesProvider As IConsumerTypesProvider, queue As IEventsQueue)
  overload: ReflectionEventing.EventBus.#ctor*
  nameWithType.vb: EventBus.New(IConsumerProvider, IConsumerTypesProvider, IEventsQueue)
  fullName.vb: ReflectionEventing.EventBus.New(ReflectionEventing.IConsumerProvider, ReflectionEventing.IConsumerTypesProvider, ReflectionEventing.Queues.IEventsQueue)
  name.vb: New(IConsumerProvider, IConsumerTypesProvider, IEventsQueue)
- uid: ReflectionEventing.EventBus.SendAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.EventBus.SendAsync``1(``0,System.Threading.CancellationToken)
  id: SendAsync``1(``0,System.Threading.CancellationToken)
  parent: ReflectionEventing.EventBus
  langs:
  - csharp
  - vb
  name: SendAsync<TEvent>(TEvent, CancellationToken)
  nameWithType: EventBus.SendAsync<TEvent>(TEvent, CancellationToken)
  fullName: ReflectionEventing.EventBus.SendAsync<TEvent>(TEvent, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing/EventBus.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: SendAsync
    path: ../src/ReflectionEventing/EventBus.cs
    startLine: 32
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Sends the specified event asynchronously within the current scope, waiting for its execution.
  remarks: >-
    This method gets the consumers for the specified event type from the consumer provider and then uses the service provider to get the required service for each consumer.

    Each consumer is then used to consume the event asynchronously.
  example: []
  syntax:
    content: 'public virtual Task SendAsync<TEvent>(TEvent eventItem, CancellationToken cancellationToken = default) where TEvent : class'
    parameters:
    - id: eventItem
      type: '{TEvent}'
      description: The event to send.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    typeParameters:
    - id: TEvent
      description: The type of the event to send.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Overridable Function SendAsync(Of TEvent As Class)(eventItem As TEvent, cancellationToken As CancellationToken = Nothing) As Task
  overload: ReflectionEventing.EventBus.SendAsync*
  implements:
  - ReflectionEventing.IEventBus.SendAsync``1({TEvent},System.Threading.CancellationToken)
  nameWithType.vb: EventBus.SendAsync(Of TEvent)(TEvent, CancellationToken)
  fullName.vb: ReflectionEventing.EventBus.SendAsync(Of TEvent)(TEvent, System.Threading.CancellationToken)
  name.vb: SendAsync(Of TEvent)(TEvent, CancellationToken)
- uid: ReflectionEventing.EventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.EventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
  id: PublishAsync``1(``0,System.Threading.CancellationToken)
  parent: ReflectionEventing.EventBus
  langs:
  - csharp
  - vb
  name: PublishAsync<TEvent>(TEvent, CancellationToken)
  nameWithType: EventBus.PublishAsync<TEvent>(TEvent, CancellationToken)
  fullName: ReflectionEventing.EventBus.PublishAsync<TEvent>(TEvent, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing/EventBus.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: PublishAsync
    path: ../src/ReflectionEventing/EventBus.cs
    startLine: 75
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Adds the specified event to the queue.Another scope will take over execution as configured.
  remarks: The method only adds the event to the execution queue, it does not wait for its successful execution.
  example: []
  syntax:
    content: 'public virtual Task PublishAsync<TEvent>(TEvent eventItem, CancellationToken cancellationToken = default) where TEvent : class'
    parameters:
    - id: eventItem
      type: '{TEvent}'
      description: The event to publish.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used to cancel the operation.
    typeParameters:
    - id: TEvent
      description: The type of the event to publish.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Overridable Function PublishAsync(Of TEvent As Class)(eventItem As TEvent, cancellationToken As CancellationToken = Nothing) As Task
  overload: ReflectionEventing.EventBus.PublishAsync*
  implements:
  - ReflectionEventing.IEventBus.PublishAsync``1({TEvent},System.Threading.CancellationToken)
  nameWithType.vb: EventBus.PublishAsync(Of TEvent)(TEvent, CancellationToken)
  fullName.vb: ReflectionEventing.EventBus.PublishAsync(Of TEvent)(TEvent, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, CancellationToken)
references:
- uid: ReflectionEventing
  commentId: N:ReflectionEventing
  href: ReflectionEventing.html
  name: ReflectionEventing
  nameWithType: ReflectionEventing
  fullName: ReflectionEventing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ReflectionEventing.IEventBus
  commentId: T:ReflectionEventing.IEventBus
  parent: ReflectionEventing
  href: ReflectionEventing.IEventBus.html
  name: IEventBus
  nameWithType: IEventBus
  fullName: ReflectionEventing.IEventBus
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: ReflectionEventing.IEventBus.ReflectionEventing.EventBusExtensions.Publish``1({TEvent})
  commentId: M:ReflectionEventing.EventBusExtensions.Publish``1(ReflectionEventing.IEventBus,``0)
  parent: ReflectionEventing.EventBusExtensions
  definition: ReflectionEventing.EventBusExtensions.Publish``1(ReflectionEventing.IEventBus,``0)
  href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Publish__1_ReflectionEventing_IEventBus___0_
  name: Publish<TEvent>(IEventBus, TEvent)
  nameWithType: EventBusExtensions.Publish<TEvent>(IEventBus, TEvent)
  fullName: ReflectionEventing.EventBusExtensions.Publish<TEvent>(ReflectionEventing.IEventBus, TEvent)
  nameWithType.vb: EventBusExtensions.Publish(Of TEvent)(IEventBus, TEvent)
  fullName.vb: ReflectionEventing.EventBusExtensions.Publish(Of TEvent)(ReflectionEventing.IEventBus, TEvent)
  name.vb: Publish(Of TEvent)(IEventBus, TEvent)
  spec.csharp:
  - uid: ReflectionEventing.EventBusExtensions.Publish``1(ReflectionEventing.IEventBus,``0)
    name: Publish
    href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Publish__1_ReflectionEventing_IEventBus___0_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - uid: ReflectionEventing.IEventBus
    name: IEventBus
    href: ReflectionEventing.IEventBus.html
  - name: ','
  - name: " "
  - name: TEvent
  - name: )
  spec.vb:
  - uid: ReflectionEventing.EventBusExtensions.Publish``1(ReflectionEventing.IEventBus,``0)
    name: Publish
    href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Publish__1_ReflectionEventing_IEventBus___0_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - uid: ReflectionEventing.IEventBus
    name: IEventBus
    href: ReflectionEventing.IEventBus.html
  - name: ','
  - name: " "
  - name: TEvent
  - name: )
- uid: ReflectionEventing.IEventBus.ReflectionEventing.EventBusExtensions.Send``1({TEvent})
  commentId: M:ReflectionEventing.EventBusExtensions.Send``1(ReflectionEventing.IEventBus,``0)
  parent: ReflectionEventing.EventBusExtensions
  definition: ReflectionEventing.EventBusExtensions.Send``1(ReflectionEventing.IEventBus,``0)
  href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Send__1_ReflectionEventing_IEventBus___0_
  name: Send<TEvent>(IEventBus, TEvent)
  nameWithType: EventBusExtensions.Send<TEvent>(IEventBus, TEvent)
  fullName: ReflectionEventing.EventBusExtensions.Send<TEvent>(ReflectionEventing.IEventBus, TEvent)
  nameWithType.vb: EventBusExtensions.Send(Of TEvent)(IEventBus, TEvent)
  fullName.vb: ReflectionEventing.EventBusExtensions.Send(Of TEvent)(ReflectionEventing.IEventBus, TEvent)
  name.vb: Send(Of TEvent)(IEventBus, TEvent)
  spec.csharp:
  - uid: ReflectionEventing.EventBusExtensions.Send``1(ReflectionEventing.IEventBus,``0)
    name: Send
    href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Send__1_ReflectionEventing_IEventBus___0_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - uid: ReflectionEventing.IEventBus
    name: IEventBus
    href: ReflectionEventing.IEventBus.html
  - name: ','
  - name: " "
  - name: TEvent
  - name: )
  spec.vb:
  - uid: ReflectionEventing.EventBusExtensions.Send``1(ReflectionEventing.IEventBus,``0)
    name: Send
    href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Send__1_ReflectionEventing_IEventBus___0_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - uid: ReflectionEventing.IEventBus
    name: IEventBus
    href: ReflectionEventing.IEventBus.html
  - name: ','
  - name: " "
  - name: TEvent
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ReflectionEventing.EventBusExtensions.Publish``1(ReflectionEventing.IEventBus,``0)
  commentId: M:ReflectionEventing.EventBusExtensions.Publish``1(ReflectionEventing.IEventBus,``0)
  href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Publish__1_ReflectionEventing_IEventBus___0_
  name: Publish<TEvent>(IEventBus, TEvent)
  nameWithType: EventBusExtensions.Publish<TEvent>(IEventBus, TEvent)
  fullName: ReflectionEventing.EventBusExtensions.Publish<TEvent>(ReflectionEventing.IEventBus, TEvent)
  nameWithType.vb: EventBusExtensions.Publish(Of TEvent)(IEventBus, TEvent)
  fullName.vb: ReflectionEventing.EventBusExtensions.Publish(Of TEvent)(ReflectionEventing.IEventBus, TEvent)
  name.vb: Publish(Of TEvent)(IEventBus, TEvent)
  spec.csharp:
  - uid: ReflectionEventing.EventBusExtensions.Publish``1(ReflectionEventing.IEventBus,``0)
    name: Publish
    href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Publish__1_ReflectionEventing_IEventBus___0_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - uid: ReflectionEventing.IEventBus
    name: IEventBus
    href: ReflectionEventing.IEventBus.html
  - name: ','
  - name: " "
  - name: TEvent
  - name: )
  spec.vb:
  - uid: ReflectionEventing.EventBusExtensions.Publish``1(ReflectionEventing.IEventBus,``0)
    name: Publish
    href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Publish__1_ReflectionEventing_IEventBus___0_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - uid: ReflectionEventing.IEventBus
    name: IEventBus
    href: ReflectionEventing.IEventBus.html
  - name: ','
  - name: " "
  - name: TEvent
  - name: )
- uid: ReflectionEventing.EventBusExtensions
  commentId: T:ReflectionEventing.EventBusExtensions
  parent: ReflectionEventing
  href: ReflectionEventing.EventBusExtensions.html
  name: EventBusExtensions
  nameWithType: EventBusExtensions
  fullName: ReflectionEventing.EventBusExtensions
- uid: ReflectionEventing.EventBusExtensions.Send``1(ReflectionEventing.IEventBus,``0)
  commentId: M:ReflectionEventing.EventBusExtensions.Send``1(ReflectionEventing.IEventBus,``0)
  href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Send__1_ReflectionEventing_IEventBus___0_
  name: Send<TEvent>(IEventBus, TEvent)
  nameWithType: EventBusExtensions.Send<TEvent>(IEventBus, TEvent)
  fullName: ReflectionEventing.EventBusExtensions.Send<TEvent>(ReflectionEventing.IEventBus, TEvent)
  nameWithType.vb: EventBusExtensions.Send(Of TEvent)(IEventBus, TEvent)
  fullName.vb: ReflectionEventing.EventBusExtensions.Send(Of TEvent)(ReflectionEventing.IEventBus, TEvent)
  name.vb: Send(Of TEvent)(IEventBus, TEvent)
  spec.csharp:
  - uid: ReflectionEventing.EventBusExtensions.Send``1(ReflectionEventing.IEventBus,``0)
    name: Send
    href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Send__1_ReflectionEventing_IEventBus___0_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - uid: ReflectionEventing.IEventBus
    name: IEventBus
    href: ReflectionEventing.IEventBus.html
  - name: ','
  - name: " "
  - name: TEvent
  - name: )
  spec.vb:
  - uid: ReflectionEventing.EventBusExtensions.Send``1(ReflectionEventing.IEventBus,``0)
    name: Send
    href: ReflectionEventing.EventBusExtensions.html#ReflectionEventing_EventBusExtensions_Send__1_ReflectionEventing_IEventBus___0_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - uid: ReflectionEventing.IEventBus
    name: IEventBus
    href: ReflectionEventing.IEventBus.html
  - name: ','
  - name: " "
  - name: TEvent
  - name: )
- uid: ReflectionEventing.EventBus.#ctor*
  commentId: Overload:ReflectionEventing.EventBus.#ctor
  href: ReflectionEventing.EventBus.html#ReflectionEventing_EventBus__ctor_ReflectionEventing_IConsumerProvider_ReflectionEventing_IConsumerTypesProvider_ReflectionEventing_Queues_IEventsQueue_
  name: EventBus
  nameWithType: EventBus.EventBus
  fullName: ReflectionEventing.EventBus.EventBus
  nameWithType.vb: EventBus.New
  fullName.vb: ReflectionEventing.EventBus.New
  name.vb: New
- uid: ReflectionEventing.IConsumerProvider
  commentId: T:ReflectionEventing.IConsumerProvider
  parent: ReflectionEventing
  href: ReflectionEventing.IConsumerProvider.html
  name: IConsumerProvider
  nameWithType: IConsumerProvider
  fullName: ReflectionEventing.IConsumerProvider
- uid: ReflectionEventing.IConsumerTypesProvider
  commentId: T:ReflectionEventing.IConsumerTypesProvider
  parent: ReflectionEventing
  href: ReflectionEventing.IConsumerTypesProvider.html
  name: IConsumerTypesProvider
  nameWithType: IConsumerTypesProvider
  fullName: ReflectionEventing.IConsumerTypesProvider
- uid: ReflectionEventing.Queues.IEventsQueue
  commentId: T:ReflectionEventing.Queues.IEventsQueue
  parent: ReflectionEventing.Queues
  href: ReflectionEventing.Queues.IEventsQueue.html
  name: IEventsQueue
  nameWithType: IEventsQueue
  fullName: ReflectionEventing.Queues.IEventsQueue
- uid: ReflectionEventing.Queues
  commentId: N:ReflectionEventing.Queues
  href: ReflectionEventing.html
  name: ReflectionEventing.Queues
  nameWithType: ReflectionEventing.Queues
  fullName: ReflectionEventing.Queues
  spec.csharp:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.Queues
    name: Queues
    href: ReflectionEventing.Queues.html
  spec.vb:
  - uid: ReflectionEventing
    name: ReflectionEventing
    href: ReflectionEventing.html
  - name: .
  - uid: ReflectionEventing.Queues
    name: Queues
    href: ReflectionEventing.Queues.html
- uid: ReflectionEventing.EventBus.SendAsync*
  commentId: Overload:ReflectionEventing.EventBus.SendAsync
  href: ReflectionEventing.EventBus.html#ReflectionEventing_EventBus_SendAsync__1___0_System_Threading_CancellationToken_
  name: SendAsync
  nameWithType: EventBus.SendAsync
  fullName: ReflectionEventing.EventBus.SendAsync
- uid: ReflectionEventing.IEventBus.SendAsync``1({TEvent},System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.IEventBus.SendAsync``1(``0,System.Threading.CancellationToken)
  parent: ReflectionEventing.IEventBus
  definition: ReflectionEventing.IEventBus.SendAsync``1(``0,System.Threading.CancellationToken)
  href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_SendAsync__1___0_System_Threading_CancellationToken_
  name: SendAsync<TEvent>(TEvent, CancellationToken)
  nameWithType: IEventBus.SendAsync<TEvent>(TEvent, CancellationToken)
  fullName: ReflectionEventing.IEventBus.SendAsync<TEvent>(TEvent, System.Threading.CancellationToken)
  nameWithType.vb: IEventBus.SendAsync(Of TEvent)(TEvent, CancellationToken)
  fullName.vb: ReflectionEventing.IEventBus.SendAsync(Of TEvent)(TEvent, System.Threading.CancellationToken)
  name.vb: SendAsync(Of TEvent)(TEvent, CancellationToken)
  spec.csharp:
  - uid: ReflectionEventing.IEventBus.SendAsync``1(``0,System.Threading.CancellationToken)
    name: SendAsync
    href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_SendAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: ReflectionEventing.IEventBus.SendAsync``1(``0,System.Threading.CancellationToken)
    name: SendAsync
    href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_SendAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: ReflectionEventing.IEventBus.SendAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.IEventBus.SendAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_SendAsync__1___0_System_Threading_CancellationToken_
  name: SendAsync<TEvent>(TEvent, CancellationToken)
  nameWithType: IEventBus.SendAsync<TEvent>(TEvent, CancellationToken)
  fullName: ReflectionEventing.IEventBus.SendAsync<TEvent>(TEvent, System.Threading.CancellationToken)
  nameWithType.vb: IEventBus.SendAsync(Of TEvent)(TEvent, CancellationToken)
  fullName.vb: ReflectionEventing.IEventBus.SendAsync(Of TEvent)(TEvent, System.Threading.CancellationToken)
  name.vb: SendAsync(Of TEvent)(TEvent, CancellationToken)
  spec.csharp:
  - uid: ReflectionEventing.IEventBus.SendAsync``1(``0,System.Threading.CancellationToken)
    name: SendAsync
    href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_SendAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: ReflectionEventing.IEventBus.SendAsync``1(``0,System.Threading.CancellationToken)
    name: SendAsync
    href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_SendAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ReflectionEventing.EventBus.PublishAsync*
  commentId: Overload:ReflectionEventing.EventBus.PublishAsync
  href: ReflectionEventing.EventBus.html#ReflectionEventing_EventBus_PublishAsync__1___0_System_Threading_CancellationToken_
  name: PublishAsync
  nameWithType: EventBus.PublishAsync
  fullName: ReflectionEventing.EventBus.PublishAsync
- uid: ReflectionEventing.IEventBus.PublishAsync``1({TEvent},System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.IEventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
  parent: ReflectionEventing.IEventBus
  definition: ReflectionEventing.IEventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
  href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_PublishAsync__1___0_System_Threading_CancellationToken_
  name: PublishAsync<TEvent>(TEvent, CancellationToken)
  nameWithType: IEventBus.PublishAsync<TEvent>(TEvent, CancellationToken)
  fullName: ReflectionEventing.IEventBus.PublishAsync<TEvent>(TEvent, System.Threading.CancellationToken)
  nameWithType.vb: IEventBus.PublishAsync(Of TEvent)(TEvent, CancellationToken)
  fullName.vb: ReflectionEventing.IEventBus.PublishAsync(Of TEvent)(TEvent, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, CancellationToken)
  spec.csharp:
  - uid: ReflectionEventing.IEventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
    name: PublishAsync
    href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_PublishAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: ReflectionEventing.IEventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
    name: PublishAsync
    href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_PublishAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: ReflectionEventing.IEventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:ReflectionEventing.IEventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_PublishAsync__1___0_System_Threading_CancellationToken_
  name: PublishAsync<TEvent>(TEvent, CancellationToken)
  nameWithType: IEventBus.PublishAsync<TEvent>(TEvent, CancellationToken)
  fullName: ReflectionEventing.IEventBus.PublishAsync<TEvent>(TEvent, System.Threading.CancellationToken)
  nameWithType.vb: IEventBus.PublishAsync(Of TEvent)(TEvent, CancellationToken)
  fullName.vb: ReflectionEventing.IEventBus.PublishAsync(Of TEvent)(TEvent, System.Threading.CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, CancellationToken)
  spec.csharp:
  - uid: ReflectionEventing.IEventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
    name: PublishAsync
    href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_PublishAsync__1___0_System_Threading_CancellationToken_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: ReflectionEventing.IEventBus.PublishAsync``1(``0,System.Threading.CancellationToken)
    name: PublishAsync
    href: ReflectionEventing.IEventBus.html#ReflectionEventing_IEventBus_PublishAsync__1___0_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - name: TEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
