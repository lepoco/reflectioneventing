### YamlMime:ManagedReference
items:
- uid: ReflectionEventing.IConsumerTypesProvider
  commentId: T:ReflectionEventing.IConsumerTypesProvider
  id: IConsumerTypesProvider
  parent: ReflectionEventing
  children:
  - ReflectionEventing.IConsumerTypesProvider.GetConsumerTypes(System.Type)
  langs:
  - csharp
  - vb
  name: IConsumerTypesProvider
  nameWithType: IConsumerTypesProvider
  fullName: ReflectionEventing.IConsumerTypesProvider
  type: Interface
  source:
    remote:
      path: src/ReflectionEventing/IConsumerTypesProvider.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: IConsumerTypesProvider
    path: ../src/ReflectionEventing/IConsumerTypesProvider.cs
    startLine: 13
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Defines a contract for a provider that can supply consumers for a specific event type.
  remarks: Implementations of this interface are expected to provide a mechanism to retrieve consumers that can handle a specific event type.
  example: []
  syntax:
    content: public interface IConsumerTypesProvider
    content.vb: Public Interface IConsumerTypesProvider
  extensionMethods:
  - ReflectionEventing.IConsumerTypesProvider.ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1
- uid: ReflectionEventing.IConsumerTypesProvider.GetConsumerTypes(System.Type)
  commentId: M:ReflectionEventing.IConsumerTypesProvider.GetConsumerTypes(System.Type)
  id: GetConsumerTypes(System.Type)
  parent: ReflectionEventing.IConsumerTypesProvider
  langs:
  - csharp
  - vb
  name: GetConsumerTypes(Type)
  nameWithType: IConsumerTypesProvider.GetConsumerTypes(Type)
  fullName: ReflectionEventing.IConsumerTypesProvider.GetConsumerTypes(System.Type)
  type: Method
  source:
    remote:
      path: src/ReflectionEventing/IConsumerTypesProvider.cs
      branch: main
      repo: https://github.com/lepoco/reflectioneventing.git
    id: GetConsumerTypes
    path: ../src/ReflectionEventing/IConsumerTypesProvider.cs
    startLine: 19
  assemblies:
  - ReflectionEventing
  namespace: ReflectionEventing
  summary: Gets the consumer types for the specified event type.
  example: []
  syntax:
    content: IEnumerable<Type> GetConsumerTypes(Type eventType)
    parameters:
    - id: eventType
      type: System.Type
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: A collection of consumer types that can handle the specified event type.
    content.vb: Function GetConsumerTypes(eventType As Type) As IEnumerable(Of Type)
  overload: ReflectionEventing.IConsumerTypesProvider.GetConsumerTypes*
references:
- uid: ReflectionEventing
  commentId: N:ReflectionEventing
  href: ReflectionEventing.html
  name: ReflectionEventing
  nameWithType: ReflectionEventing
  fullName: ReflectionEventing
- uid: ReflectionEventing.IConsumerTypesProvider.ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1
  commentId: M:ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1(ReflectionEventing.IConsumerTypesProvider)
  parent: ReflectionEventing.ConsumerTypesProviderExtensions
  definition: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1(ReflectionEventing.IConsumerTypesProvider)
  href: ReflectionEventing.ConsumerTypesProviderExtensions.html#ReflectionEventing_ConsumerTypesProviderExtensions_GetConsumerTypes__1_ReflectionEventing_IConsumerTypesProvider_
  name: GetConsumerTypes<TEvent>(IConsumerTypesProvider)
  nameWithType: ConsumerTypesProviderExtensions.GetConsumerTypes<TEvent>(IConsumerTypesProvider)
  fullName: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes<TEvent>(ReflectionEventing.IConsumerTypesProvider)
  nameWithType.vb: ConsumerTypesProviderExtensions.GetConsumerTypes(Of TEvent)(IConsumerTypesProvider)
  fullName.vb: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes(Of TEvent)(ReflectionEventing.IConsumerTypesProvider)
  name.vb: GetConsumerTypes(Of TEvent)(IConsumerTypesProvider)
  spec.csharp:
  - uid: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1(ReflectionEventing.IConsumerTypesProvider)
    name: GetConsumerTypes
    href: ReflectionEventing.ConsumerTypesProviderExtensions.html#ReflectionEventing_ConsumerTypesProviderExtensions_GetConsumerTypes__1_ReflectionEventing_IConsumerTypesProvider_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - uid: ReflectionEventing.IConsumerTypesProvider
    name: IConsumerTypesProvider
    href: ReflectionEventing.IConsumerTypesProvider.html
  - name: )
  spec.vb:
  - uid: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1(ReflectionEventing.IConsumerTypesProvider)
    name: GetConsumerTypes
    href: ReflectionEventing.ConsumerTypesProviderExtensions.html#ReflectionEventing_ConsumerTypesProviderExtensions_GetConsumerTypes__1_ReflectionEventing_IConsumerTypesProvider_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - uid: ReflectionEventing.IConsumerTypesProvider
    name: IConsumerTypesProvider
    href: ReflectionEventing.IConsumerTypesProvider.html
  - name: )
- uid: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1(ReflectionEventing.IConsumerTypesProvider)
  commentId: M:ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1(ReflectionEventing.IConsumerTypesProvider)
  href: ReflectionEventing.ConsumerTypesProviderExtensions.html#ReflectionEventing_ConsumerTypesProviderExtensions_GetConsumerTypes__1_ReflectionEventing_IConsumerTypesProvider_
  name: GetConsumerTypes<TEvent>(IConsumerTypesProvider)
  nameWithType: ConsumerTypesProviderExtensions.GetConsumerTypes<TEvent>(IConsumerTypesProvider)
  fullName: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes<TEvent>(ReflectionEventing.IConsumerTypesProvider)
  nameWithType.vb: ConsumerTypesProviderExtensions.GetConsumerTypes(Of TEvent)(IConsumerTypesProvider)
  fullName.vb: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes(Of TEvent)(ReflectionEventing.IConsumerTypesProvider)
  name.vb: GetConsumerTypes(Of TEvent)(IConsumerTypesProvider)
  spec.csharp:
  - uid: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1(ReflectionEventing.IConsumerTypesProvider)
    name: GetConsumerTypes
    href: ReflectionEventing.ConsumerTypesProviderExtensions.html#ReflectionEventing_ConsumerTypesProviderExtensions_GetConsumerTypes__1_ReflectionEventing_IConsumerTypesProvider_
  - name: <
  - name: TEvent
  - name: '>'
  - name: (
  - uid: ReflectionEventing.IConsumerTypesProvider
    name: IConsumerTypesProvider
    href: ReflectionEventing.IConsumerTypesProvider.html
  - name: )
  spec.vb:
  - uid: ReflectionEventing.ConsumerTypesProviderExtensions.GetConsumerTypes``1(ReflectionEventing.IConsumerTypesProvider)
    name: GetConsumerTypes
    href: ReflectionEventing.ConsumerTypesProviderExtensions.html#ReflectionEventing_ConsumerTypesProviderExtensions_GetConsumerTypes__1_ReflectionEventing_IConsumerTypesProvider_
  - name: (
  - name: Of
  - name: " "
  - name: TEvent
  - name: )
  - name: (
  - uid: ReflectionEventing.IConsumerTypesProvider
    name: IConsumerTypesProvider
    href: ReflectionEventing.IConsumerTypesProvider.html
  - name: )
- uid: ReflectionEventing.ConsumerTypesProviderExtensions
  commentId: T:ReflectionEventing.ConsumerTypesProviderExtensions
  parent: ReflectionEventing
  href: ReflectionEventing.ConsumerTypesProviderExtensions.html
  name: ConsumerTypesProviderExtensions
  nameWithType: ConsumerTypesProviderExtensions
  fullName: ReflectionEventing.ConsumerTypesProviderExtensions
- uid: ReflectionEventing.IConsumerTypesProvider.GetConsumerTypes*
  commentId: Overload:ReflectionEventing.IConsumerTypesProvider.GetConsumerTypes
  href: ReflectionEventing.IConsumerTypesProvider.html#ReflectionEventing_IConsumerTypesProvider_GetConsumerTypes_System_Type_
  name: GetConsumerTypes
  nameWithType: IConsumerTypesProvider.GetConsumerTypes
  fullName: ReflectionEventing.IConsumerTypesProvider.GetConsumerTypes
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
